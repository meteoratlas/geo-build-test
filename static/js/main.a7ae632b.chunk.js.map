{"version":3,"sources":["components/ui/TestMenu.js","logic/Keyboard.js","logic/Util.js","pixi/Triangle.js","pixi/Transition.js","pixi/Grid.js","pixi/GridNumbers.js","pixi/Goal.js","App.js","serviceWorker.js","index.js"],"names":["TestMenu","props","state","id","className","this","hidden","onClick","moveUp","moveDown","moveLeft","moveRight","Component","keyboard","value","key","isDown","isUp","press","undefined","release","downHandler","event","preventDefault","upHandler","downListener","bind","upListener","window","addEventListener","unsubscribe","removeEventListener","Util","coords","map","n","i","playerCoords","goalCoords","length","every","c","px","py","worldToLocal","x1","y1","x2","y2","x3","y3","origArea","Math","abs","HORIZONTAL","VERTICAL","Triangle","x","y","boardSize","cellSize","allowMove","animateSpeed","left","up","right","down","q","e","h","v","rotate","translate","reflect","dx","dy","animate","gsap","to","0","1","2","3","4","5","duration","ease","onComplete","console","log","angle","originX","originY","PI","angleSin","sin","angleCos","cos","copy","concat","newCoords","round","horizontal","localToWorld","size","clear","beginFill","lineStyle","moveTo","lineTo","closePath","endFill","PIXI","Transition","width","height","tris","triWidth","triHeight","time","delay","drawRect","pos","transitionDone","Grid","count","index","GridNumbers","centreX","centreY","numbers","t","fontSize","fill","addChild","visOffset","push","cacheAsBitmap","Goal","draw","App","canvasRef","React","createRef","canvas","current","app","setTimeout","backgroundColor","view","resolution","devicePixelRatio","root","container","stage","grid","gridNums","totalGridSize","tri","goal","checkWin","screen","pivot","pointInTri","ticker","add","delta","ref","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7ae632b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TestMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"sidebar\" className={this.props.hidden ? \"hidden\" : \"\"}>\r\n                <button onClick={this.props.moveUp}>Up</button>\r\n                <button onClick={this.props.moveDown}>Down</button>\r\n                <button onClick={this.props.moveLeft}>Left</button>\r\n                <button onClick={this.props.moveRight}>Right</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestMenu;\r\n","// for debugging only\r\n// https://github.com/kittykatattack/learningPixi#keyboard\r\n\r\nfunction keyboard(value) {\r\n    let key = {};\r\n    key.value = value;\r\n    key.isDown = false;\r\n    key.isUp = true;\r\n    key.press = undefined;\r\n    key.release = undefined;\r\n    //The `downHandler`\r\n    key.downHandler = event => {\r\n        if (event.key === key.value) {\r\n            if (key.isUp && key.press) key.press();\r\n            key.isDown = true;\r\n            key.isUp = false;\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    //The `upHandler`\r\n    key.upHandler = event => {\r\n        if (event.key === key.value) {\r\n            if (key.isDown && key.release) key.release();\r\n            key.isDown = false;\r\n            key.isUp = true;\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    //Attach event listeners\r\n    const downListener = key.downHandler.bind(key);\r\n    const upListener = key.upHandler.bind(key);\r\n\r\n    window.addEventListener(\"keydown\", downListener, false);\r\n    window.addEventListener(\"keyup\", upListener, false);\r\n\r\n    // Detach event listeners\r\n    key.unsubscribe = () => {\r\n        window.removeEventListener(\"keydown\", downListener);\r\n        window.removeEventListener(\"keyup\", upListener);\r\n    };\r\n\r\n    return key;\r\n}\r\nexport default keyboard;\r\n","export default class Util {\r\n    static worldToLocal(coords) {\r\n        return coords.map((n, i) => (i % 2 !== 0 ? -n : n));\r\n    }\r\n    static localToWorld(coords) {\r\n        return coords.map(n => n + 10);\r\n    }\r\n    static checkWin(playerCoords, goalCoords) {\r\n        if (playerCoords.length !== goalCoords.length) return false;\r\n        return playerCoords.every((c, i) => c === goalCoords[i]);\r\n    }\r\n    // need to test thoroughly\r\n    static pointInTri(coords, px, py) {\r\n        //http://www.jeffreythompson.org/collision-detection/tri-point.php\r\n        const [x1, y1, x2, y2, x3, y3] = this.worldToLocal(coords);\r\n        const origArea = Math.abs(\r\n            (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1)\r\n        );\r\n        const area1 = Math.abs((x1 - px) * (y2 - py) - (x2 - px) * (y1 - py));\r\n        const area2 = Math.abs((x2 - px) * (y3 - py) - (x3 - px) * (y2 - py));\r\n        const area3 = Math.abs((x3 - px) * (y1 - py) - (x1 - px) * (y3 - py));\r\n        return area1 + area2 + area3 === origArea;\r\n    }\r\n    static HORIZONTAL = \"horizontal\";\r\n    static VERTICAL = \"vertical\";\r\n}\r\n","import * as PIXI from \"pixi.js\";\r\nimport gsap from \"gsap\";\r\nimport keyboard from \"../logic/Keyboard\";\r\nimport Util from \"../logic/Util\";\r\n\r\nexport default class Triangle extends PIXI.Graphics {\r\n    constructor(x, y, boardSize, cellSize) {\r\n        super();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.boardSize = boardSize;\r\n        this.cellSize = cellSize;\r\n        this.allowMove = true;\r\n        this.animateSpeed = 0.4;\r\n\r\n        // x1,y1,x2,y2,x3,y3\r\n        // change triangle size in this array\r\n        this.coords = [0, 0, 0, 2, 2, 2];\r\n\r\n        let left = keyboard(\"ArrowLeft\"),\r\n            up = keyboard(\"ArrowUp\"),\r\n            right = keyboard(\"ArrowRight\"),\r\n            down = keyboard(\"ArrowDown\"),\r\n            q = keyboard(\"q\"),\r\n            e = keyboard(\"e\"),\r\n            h = keyboard(\"h\"),\r\n            v = keyboard(\"v\");\r\n\r\n        q.press = () => {\r\n            if (!this.allowMove) return;\r\n            this.rotate(90, this.coords[0], this.coords[1], this.coords);\r\n        };\r\n        e.press = () => {\r\n            if (!this.allowMove) return;\r\n            this.rotate(-90, this.coords[0], this.coords[1], this.coords);\r\n        };\r\n        left.press = () => {\r\n            this.translate(-1, 0);\r\n        };\r\n        right.press = () => {\r\n            this.translate(1, 0);\r\n        };\r\n        up.press = () => {\r\n            this.translate(0, -1);\r\n        };\r\n        down.press = () => {\r\n            this.translate(0, 1);\r\n        };\r\n        h.press = () => {\r\n            this.reflect(true);\r\n        };\r\n        v.press = () => {\r\n            this.reflect(false);\r\n        };\r\n    }\r\n    onMoveComplete() {}\r\n    translate(dx, dy, animate = true) {\r\n        if (!this.allowMove) return;\r\n\r\n        if (!animate) {\r\n            for (let i = 0; i < this.coords.length; i++) {\r\n                this.coords[i] += i % 2 === 1 ? dy : dx;\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.allowMove = false;\r\n        gsap.to(this.coords, {\r\n            0: this.coords[0] + dx,\r\n            1: this.coords[1] + dy,\r\n            2: this.coords[2] + dx,\r\n            3: this.coords[3] + dy,\r\n            4: this.coords[4] + dx,\r\n            5: this.coords[5] + dy,\r\n            duration: this.animateSpeed,\r\n            ease: \"bounce.out\",\r\n            onComplete: () => {\r\n                this.allowMove = true;\r\n                console.log(Util.worldToLocal(this.coords));\r\n            }\r\n        });\r\n    }\r\n    rotate(angle, originX, originY, coords) {\r\n        if (!this.allowMove) return;\r\n        this.allowMove = false;\r\n\r\n        angle *= Math.PI / 180;\r\n        const angleSin = Math.sin(angle);\r\n        const angleCos = Math.cos(angle);\r\n\r\n        let copy = coords.concat();\r\n        let newCoords = [];\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n            newCoords[i] = Math.round(\r\n                (copy[i] - originX) * angleCos +\r\n                    (copy[i + 1] - originY) * angleSin +\r\n                    originX\r\n            );\r\n            newCoords[i + 1] = Math.round(\r\n                (copy[i + 1] - originY) * angleCos -\r\n                    (copy[i] - originX) * angleSin +\r\n                    originY\r\n            );\r\n        }\r\n        gsap.to(this.coords, {\r\n            0: newCoords[0],\r\n            1: newCoords[1],\r\n            2: newCoords[2],\r\n            3: newCoords[3],\r\n            4: newCoords[4],\r\n            5: newCoords[5],\r\n            duration: this.animateSpeed,\r\n            ease: \"bounce.out\",\r\n            onComplete: () => {\r\n                this.allowMove = true;\r\n                // console.log(Util.worldToLocal(this.coords));\r\n            }\r\n        });\r\n    }\r\n    reflect(horizontal, animate = true) {\r\n        if (!this.allowMove) return;\r\n        this.allowMove = false;\r\n        if (!animate) {\r\n            return;\r\n        }\r\n        if (horizontal) {\r\n            gsap.to(this.coords, {\r\n                0: this.coords[0] * -1,\r\n                2: this.coords[2] * -1,\r\n                4: this.coords[4] * -1,\r\n                duration: this.animateSpeed,\r\n                ease: \"bounce.out\",\r\n                onComplete: () => {\r\n                    this.allowMove = true;\r\n                    // console.log(Util.worldToLocal(this.coords));\r\n                }\r\n            });\r\n        } else {\r\n            gsap.to(this.coords, {\r\n                1: this.coords[1] * -1,\r\n                3: this.coords[3] * -1,\r\n                5: this.coords[5] * -1,\r\n                duration: this.animateSpeed,\r\n                ease: \"bounce.out\",\r\n                onComplete: () => {\r\n                    this.allowMove = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    draw() {\r\n        let c = Util.localToWorld(this.coords);\r\n        const size = this.cellSize;\r\n        this.clear();\r\n        this.beginFill(0xff0000);\r\n        this.lineStyle(2);\r\n        this.moveTo(c[0] * size, c[1] * size);\r\n        this.lineTo(c[2] * size, c[3] * size);\r\n        this.lineTo(c[4] * size, c[5] * size);\r\n        this.closePath();\r\n        this.endFill();\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js\";\r\nimport gsap from \"gsap\";\r\n\r\nexport default class Transition extends PIXI.Graphics {\r\n    constructor(width, height) {\r\n        super();\r\n        this.width = width;\r\n        this.height = height;\r\n        this.x = -width - 80;\r\n        this.y = 0;\r\n        this.tris = 4;\r\n        this.triWidth = 80;\r\n        this.triHeight = height / this.tris;\r\n        this.time = 1;\r\n        this.delay = 0.5;\r\n\r\n        this.beginFill(0x000000);\r\n        this.drawRect(0, 0, width, height);\r\n\r\n        for (let i = 0; i < this.tris; i++) {\r\n            this.moveTo(width, i * this.triHeight);\r\n            this.lineTo(\r\n                width + this.triWidth,\r\n                this.triHeight * i + this.triHeight / 2\r\n            );\r\n            this.lineTo(width, this.triHeight * i + this.triHeight);\r\n        }\r\n        this.closePath();\r\n        this.endFill();\r\n    }\r\n    transitionIn(pos) {\r\n        gsap.to(this, {\r\n            x: pos,\r\n            duration: this.time,\r\n            delay: this.delay,\r\n            ease: \"quint-inout\",\r\n            onComplete: this.transitionDone\r\n        });\r\n    }\r\n    transitionOut(pos) {\r\n        gsap.to(this, {\r\n            x: pos,\r\n            duration: this.time,\r\n            delay: this.delay,\r\n            ease: \"quint-inout\",\r\n            onComplete: this.transitionDone\r\n        });\r\n    }\r\n    transitionDone() {\r\n        //\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js\";\r\n\r\nexport default class Grid extends PIXI.Graphics {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        this.clear();\r\n        this.beginFill(0xffffff);\r\n        this.drawRect(x, y, width, height);\r\n        this.endFill();\r\n\r\n        this.lineStyle(2, 0x222222, 1);\r\n        let count = 0;\r\n\r\n        for (let index = 0; index <= width; index += width / 20) {\r\n            count === 10\r\n                ? this.lineStyle(2, 0xee22ee, 1)\r\n                : this.lineStyle(2, 0x222222, 1);\r\n            this.moveTo(index + x, y);\r\n            this.lineTo(index + x, height + y);\r\n            count++;\r\n        }\r\n        count = 0;\r\n        for (let index = 0; index <= height; index += height / 20) {\r\n            count === 10\r\n                ? this.lineStyle(2, 0xee22ee, 1)\r\n                : this.lineStyle(2, 0x222222, 1);\r\n            this.moveTo(x, y + index);\r\n            this.lineTo(width + x, index + y);\r\n            count++;\r\n        }\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js\";\r\n\r\nexport default class GridNumbers extends PIXI.Container {\r\n    constructor(centreX, centreY, cellSize) {\r\n        super();\r\n\r\n        const offset = 10;\r\n        const visOffset = 20;\r\n\r\n        let numbers = [];\r\n        // horizontal numbers\r\n        for (let i = 0; i <= 20; i += 5) {\r\n            // to skip drawing zero twice\r\n            if (i === 10) continue;\r\n            let t = new PIXI.Text(i - offset, {\r\n                fontSize: 20,\r\n                fill: 0x101010\r\n                // align: \"center\"\r\n            });\r\n            this.addChild(t);\r\n            t.x = i * cellSize + visOffset / 2;\r\n            t.y = centreY;\r\n            numbers.push(t);\r\n        }\r\n        for (let i = 0; i <= 20; i += 5) {\r\n            // if (i === 10) continue;\r\n            let t = new PIXI.Text(20 - i - offset, {\r\n                fontSize: 20,\r\n                fill: 0x101010\r\n                // align: \"center\"\r\n            });\r\n            this.addChild(t);\r\n            t.x = centreX + visOffset;\r\n            t.y = i * cellSize - visOffset / 8;\r\n            numbers.push(t);\r\n        }\r\n\r\n        this.cacheAsBitmap = true;\r\n    }\r\n}\r\n","import * as PIXI from \"pixi.js\";\r\nimport Util from \"../logic/Util\";\r\n\r\nexport default class Goal extends PIXI.Graphics {\r\n    constructor(coords, cellSize) {\r\n        super();\r\n        this.x += 16;\r\n        this.y += 16;\r\n        this.coords = coords;\r\n        this.cellSize = cellSize;\r\n        this.draw();\r\n    }\r\n    draw() {\r\n        let c = Util.localToWorld(this.coords);\r\n        const size = this.cellSize;\r\n        this.clear();\r\n        this.beginFill(0x666666);\r\n        this.lineStyle(2);\r\n        this.moveTo(c[0] * size, c[1] * size);\r\n        this.lineTo(c[2] * size, c[3] * size);\r\n        this.lineTo(c[4] * size, c[5] * size);\r\n        this.closePath();\r\n        this.endFill();\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport TestMenu from \"./components/ui/TestMenu\";\r\nimport Triangle from \"./pixi/Triangle\";\r\nimport Transition from \"./pixi/Transition\";\r\nimport keyboard from \"./logic/Keyboard\";\r\nimport Grid from \"./pixi/Grid\";\r\nimport GridNumbers from \"./pixi/GridNumbers\";\r\nimport \"./App.css\";\r\nimport Goal from \"./pixi/Goal\";\r\nimport Util from \"./logic/Util\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvasRef = React.createRef();\r\n        this.canvas = this.canvasRef.current;\r\n        this.app = {};\r\n        this.state = {};\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.canvas = this.canvasRef.current;\r\n            this.app = new PIXI.Application({\r\n                width: 1024,\r\n                height: 576,\r\n                backgroundColor: 0x1099bb,\r\n                view: this.canvas,\r\n                resolution: window.devicePixelRatio || 1\r\n            });\r\n            const root = new PIXI.Container();\r\n            const container = new PIXI.Container();\r\n            root.addChild(container);\r\n            this.app.stage.addChild(root);\r\n\r\n            // this.app.stage.addChild(container);\r\n            let totalGridSize = 500;\r\n            let cellSize = totalGridSize / 20;\r\n            let grid = new Grid(16, 16, totalGridSize, totalGridSize);\r\n\r\n            // container.setTransform(1024 / 2, 572, 0, -1);\r\n            // root.y += 400;\r\n            // container.worldTransform.y += 500;\r\n            // container.updateTransform();\r\n            // console.log(container.y);\r\n\r\n            container.addChild(grid);\r\n            let gridNums = new GridNumbers(\r\n                totalGridSize / 2,\r\n                totalGridSize / 2,\r\n                cellSize\r\n            );\r\n\r\n            let p = keyboard(\"p\");\r\n            p.press = () => {\r\n                console.log(tri.coords, goal.coords);\r\n                console.log(Util.checkWin(tri.coords, goal.coords));\r\n            };\r\n\r\n            let tri = new Triangle(16, 16, totalGridSize, cellSize);\r\n            container.addChild(gridNums);\r\n\r\n            let goal = new Goal([3, 3, 3, 5, 5, 5], cellSize);\r\n            container.addChild(goal);\r\n            container.addChild(tri);\r\n\r\n            this.app.stage.addChild(new Transition(1024, 576));\r\n\r\n            // Move container to the center\r\n            container.x = this.app.screen.width / 3;\r\n            container.y = this.app.screen.height / 2;\r\n\r\n            // Center bunny sprite in local container coordinates\r\n            container.pivot.x = container.width / 2;\r\n            container.pivot.y = container.height / 2;\r\n\r\n            console.log(\r\n                `Point is in the triangle:${Util.pointInTri(tri.coords, 2, -2)}`\r\n            );\r\n\r\n            // Listen for animate update\r\n            this.app.ticker.add(delta => {\r\n                // use delta to create frame-independent transform\r\n                // container.rotation -= 0.005 * delta;\r\n                if (tri) {\r\n                    tri.draw();\r\n                }\r\n            });\r\n        }, 5);\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"app-container\">\r\n                <h3>Temporary Controls</h3>\r\n                <p>Use the arrow keys to translate</p>\r\n                <p>Use Q and E to rotate</p>\r\n                <p>Use H and V to reflect</p>\r\n                <div id=\"game-container\">\r\n                    <canvas ref={this.canvasRef} />\r\n                    <TestMenu\r\n                        hidden={true}\r\n                        moveUp={() => {}}\r\n                        moveDown={() => {}}\r\n                        moveLeft={() => {}}\r\n                        moveRight={() => {}}\r\n                    />\r\n                </div>\r\n                {/* <Updater /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}